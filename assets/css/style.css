/* - Dark Blue (Dark Mode Elements): hsl(209, 23%, 22%)
- Very Dark Blue (Dark Mode Background): hsl(207, 26%, 17%)
- Very Dark Blue (Light Mode Text): hsl(200, 15%, 8%)
- Dark Gray (Light Mode Input): hsl(0, 0%, 52%)
- Very Light Gray (Light Mode Background): hsl(0, 0%, 98%)
- White (Dark Mode Text & Light Mode Elements): hsl(0, 0%, 100%) */
:root {
  --dark-blue: hsl(209, 23%, 22%);
  --very-dark-blue: hsl(207, 26%, 17%);
  --very-light-gray: hsl(0, 0%, 98%);
  --white: hsl(0, 0%, 100%);
  --dark-gray: hsl(0, 0%, 52%);
  --light-gray: hsl(0, 0%, 98%);
  --light-blue: hsl(200, 15%, 8%);
  --light-green: hsl(120, 100%, 50%);
  --light-red: hsl(359, 100%, 50%);

  --spacing-ctn: calc(80px + (96 - 80) * ((100vw - 1199px) / (1440 - 1199)));

  --grid: 4;

  --shadow-1: 0px 4px 8px 0px rgba(0, 0, 0, 0.1);
  --shadow-2: 0px 0px 8px 0px rgba(0, 0, 0, 0.2);
}
/* RESET HTML */
*,
*::before,
*::after {
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}
html:focus-within {
  scroll-behavior: smooth;
}
/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin-block-end: 0;
}
/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0;
}
/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}
/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}
/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}
/* Balance text wrapping on headings */
h1,
h2,
h3,
h4 {
  text-wrap: balance;
}
/* A elements that don't have a class get default styles */
a,
a:not([class]) {
  text-decoration-skip-ink: auto;
  text-decoration: none;
  color: currentColor;
}
/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}
/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}
input:focus {
  outline: none;
}
button {
  border: 0;
  background: transparent;
}
/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}
/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/* END: RESET HTML */
body {
  font-family: "Nunito Sans", sans-serif;
  background-color: var(--light-gray);
}
header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 80px;
  padding-inline: var(--spacing-ctn);
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: var(--white);
  box-shadow: var(--shadow-1);
  z-index: 10;
}
header a {
  font-size: 1.5rem;
  font-weight: 900;
}
header button {
  font-size: 1rem;
  font-weight: 500;
  display: flex;
  align-items: center;
  grid-gap: 0.5rem;
}
main {
  padding: 80px var(--spacing-ctn) var(--spacing-ctn);
}
.search-and-filter {
  margin-block: 3rem;
  display: flex;
  justify-content: space-between;
}
#country-list {
  display: grid;
  grid-template-columns: repeat(var(--grid), 1fr);
  gap: var(--spacing-ctn);
  border: 0.5rem;
}
#country-list * {
  transition: 0.4s ease;
}
#country-list a {
  border-radius: 0.5rem;
  overflow: hidden;
  box-shadow: var(--shadow-1);
}
#country-list a figure {
  position: relative;
  padding-top: 56.25%;
}
#country-list a figure > img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
#country-list a > div {
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  grid-gap: 1rem;
}
#country-list a > div > h2 {
  font-size: 1rem;
  font-weight: 800;
}
#country-list a > div > p {
  font-size: 12px;
}
#detail-page .info {
  display: flex;
  grid-gap: var(--spacing-ctn);
}
#detail-page .info > div {
  display: flex;
  width: 50%;
}
#detail-page figure {
  width: 100%;
  max-width: 559px;
}
#detail-page figure > img {
  width: 100%;
  height: 100%;
  margin: auto 0;
}
#detail-page .inner-wrapper {
  display: flex;
}
#detail-page .info .contxt {
  display: flex;
  flex-direction: column;
  margin-block: auto;
}
#detail-page .info .contxt > h2 {
  margin-bottom: 1.5rem;
}
#detail-page .info .contxt > div {
  margin-bottom: 2rem;
}
#detail-page .info .contxt > div:nth-last-child(1) {
  margin: 0;
}
#border-countries,
#badge-list {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  grid-gap: 0.5rem;
}
#border-countries {
}
#border-countries p {
  text-wrap: nowrap;
}
#badge-list > div {
  padding: 0.25rem 1.5rem;
  border-radius: 0.5rem;
  background: var(--white);
}
.btn {
  display: flex;
  align-items: center;
  grid-gap: 0.5rem;
  box-shadow: var(--shadow-2);
  margin-block: 3rem;
  padding: 0.5rem 2rem;
  border-radius: 0.5rem;
  background: var(--white);
  width: fit-content;
}
.btn .icon-wrapper {
  position: relative;
  display: flex;
  width: 1rem;
  height: 1rem;
  overflow: hidden;
}
.btn:hover .icon {
  transform: translateX(-100%);
}
.btn .icon-wrapper .icon {
  width: 1rem;
  height: 1rem;
  transition: 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}
.btn .inner-wrapper {
  display: flex;
  align-items: center;
}
.input-wrapper {
}
.input-wrapper {
  min-width: 30rem;
  display: flex;
  align-items: center;
  grid-gap: 0.5rem;
  padding: 0.5rem 1.5rem;
  background: var(--white);
  box-shadow: var(--shadow-2);
  border-radius: 6px;
}
.input-wrapper .icon {
  color: var(--dark-gray);
}
.input-wrapper input, .input-wrapper select {
  border: 0 !important;
}
.input-wrapper select {
  background: var(--white);
  padding: 0.5rem 1.5rem;
}
